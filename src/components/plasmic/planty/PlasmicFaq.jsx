// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: ozcq8GxerrF1WYaqjsW34y
// Component: 3tDL19eWjmDl1l
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  hasVariant,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Header2 from "../../Header2"; // plasmic-import: zrbm_cXqG-RFfk/component
import ProductCard from "../../ProductCard"; // plasmic-import: Pn5M_QzIQn7ZB3/component
import Ratings from "../../Ratings"; // plasmic-import: 9S_qTaYwkjYj0t/component
import FeatureItem from "../../FeatureItem"; // plasmic-import: 0qu_kH_ddiMZdR/component
import BlogPost from "../../BlogPost"; // plasmic-import: OzNhyBBwnUWeMi/component
import Footer from "../../Footer"; // plasmic-import: Ds72FX0K-kOF2Y/component
import MenuButton from "../../MenuButton"; // plasmic-import: V-Evw1O_93TrWQ/component
import { useScreenVariants as useScreenVariantssOxgEMpX5WMfyx } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: sOxgEMpX5wMfyx/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_library_plasmic_color_type_css from "../library_plasmic_color_type/plasmic_library_plasmic_color_type.module.css"; // plasmic-import: seaQhLVS4bbjiGvJJrRwyL/projectcss
import projectcss from "./plasmic_planty.module.css"; // plasmic-import: ozcq8GxerrF1WYaqjsW34y/projectcss
import sty from "./PlasmicFaq.module.css"; // plasmic-import: 3tDL19eWjmDl1l/css
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: le9jVYTVBu1qJc/icon
import DotSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__DotSvgrepoCom1Svg"; // plasmic-import: yPw-LbBqdaELPO/icon
import LocationSvgrepoCom1SvgIcon from "./icons/PlasmicIcon__LocationSvgrepoCom1Svg"; // plasmic-import: AwQWMO6tSqwvur/icon
import LogoWhitesvgIcon from "./icons/PlasmicIcon__LogoWhitesvg"; // plasmic-import: balrGAwrw01e0o/icon
import galinaNMiziNqvJx5MUnsplashjpgARAirbMaCfir from "./images/galinaNMiziNqvJx5MUnsplashjpg.jpg"; // plasmic-import: A_rAIRB_maCFIR/picture
import igorSonFvPxCqgtwcUnsplashjpgO3KFr3VQ40RKOw from "./images/igorSonFvPxCqgtwcUnsplashjpg.jpg"; // plasmic-import: o3KFr3vQ40rKOw/picture
import scottWebbORwRlTgBrPoUnsplashjpgZt1MhIquN0B9Dk from "./images/scottWebbORwRlTgBrPoUnsplashjpg.jpg"; // plasmic-import: ZT1MHIquN0B9Dk/picture
import freddieMarriageUcfKyTanLuUnsplashjpg69MtM6AxIZnF from "./images/freddieMarriageUcfKyTanLuUnsplashjpg.jpg"; // plasmic-import: 69mtM6ax-I_ZnF/picture
import f2Ijq0BYlEpgjyWy from "./images/f2.jpg"; // plasmic-import: ijq0BYlEpgjyWY/picture
import f3VGdmatAkcDt6OJ from "./images/f3.jpg"; // plasmic-import: VGdmatAkcDT6oJ/picture
import f4LrXqDp5TuHj5I from "./images/f4.jpg"; // plasmic-import: lrXQDp5_TuHJ5I/picture
import b1Gc8XZuPeE3Xri from "./images/b1.jpg"; // plasmic-import: gc8xZuPE-E3XRI/picture
import b2ZsFejOqYuGucyL from "./images/b2.jpg"; // plasmic-import: ZSFejOqYuGucyL/picture
import b3ZPeaqAnQLspkp from "./images/b3.jpg"; // plasmic-import: zPeaqAnQ-lspkp/picture
import adidasZyTCRzQd1XP2U from "./images/adidas.png"; // plasmic-import: ZyT-CRzQD1xP2u/picture
import hmUs3NPrvBl7Czal from "./images/hm.png"; // plasmic-import: Us3NPrvBL7CZAL/picture
import kappa6Knw5HlG0NoZmC from "./images/kappa.png"; // plasmic-import: 6KNW5HlG0NOZmC/picture
import lacosteNuYyWlf4Zl1Cxa from "./images/lacoste.png"; // plasmic-import: NUYyWLF4ZL1cxa/picture
import levisNqr00Qq1MYrLBa from "./images/levis.png"; // plasmic-import: Nqr00QQ1MYrLBa/picture
import plant6JpgC6L1C8MPjCoBpj from "./images/plant6Jpg.png"; // plasmic-import: C6L1C8MPjCoBPJ/picture
import plant1JpgJur1RNKmGbilj from "./images/plant1Jpg.png"; // plasmic-import: Jur1-rNKmGbilj/picture
import plant7JpgFY6MVzsllwIo2L from "./images/plant7Jpg.png"; // plasmic-import: fY6mVzsllwIo2l/picture
import plant5JpgSC9Dn8R35Vnpr from "./images/plant5Jpg.png"; // plasmic-import: s_c9DN8r35vnpr/picture
import plant41JpgPDx9Qa5KrKmFe from "./images/plant41Jpg.png"; // plasmic-import: pDX9Qa5KrKmFe_/picture
import plant31JpgVmNfGCgklisJox from "./images/plant31Jpg.png"; // plasmic-import: VmNfGCgklisJox/picture
import plant9WebpKV5HjHwju5Oi from "./images/plant9Webp.webp"; // plasmic-import: kV5-HJ_hwju5Oi/picture
import plant2WebpSbSmpYgIseSxK from "./images/plant2Webp.webp"; // plasmic-import: SBSmpYGIseSx-k/picture
import promowebpZPzX4E2K21DeiP from "./images/promowebp.webp"; // plasmic-import: zPzX4E2k21DeiP/picture

export const PlasmicFaq__VariantProps = new Array();

export const PlasmicFaq__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicFaq__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantssOxgEMpX5WMfyx()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_library_plasmic_color_type_css.plasmic_tokens,
            sty.root
          )}
        >
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__eVtJx)}>
              {(
                hasVariant(globalVariants, "screen", "mobile") ? true : true
              ) ? (
                <Header2
                  className={classNames("__wab_instance", sty.header2__vclsZ)}
                />
              ) : null}
              <div className={classNames(projectcss.all, sty.freeBox___2Zzn2)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"foreground2"}
                  data-plasmic-override={overrides.foreground2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.foreground2)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__q6FyJ)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1___8Rq9I
                      )}
                    >
                      {"Behold our FAQ"}
                    </h1>
                    {true ? (
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bfkAq
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ybs01
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                            : "All right, friends. Letâ€™s do this. This section will cover basic, frequently asked questions for e-commerce merchants."}
                        </div>
                      </div>
                    ) : null}
                  </p.Stack>
                </p.Stack>
              </div>
            </div>
          ) : null}
          {true ? (
            <div
              data-plasmic-name={"header"}
              data-plasmic-override={overrides.header}
              className={classNames(projectcss.all, sty.header)}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__xK9Ce)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__kzl4T)}>
                  {true ? (
                    <Header2
                      className={classNames(
                        "__wab_instance",
                        sty.header2__vse3
                      )}
                    />
                  ) : null}
                </div>
              </p.Stack>
              {true ? (
                <div
                  className={classNames(projectcss.all, sty.freeBox___6WJa5)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__tepyh
                    )}
                  >
                    {"Top Collections"}
                  </h2>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__cYyJz)}
                >
                  <div className={classNames(projectcss.all, sty.column__yiRi)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__gcNwO
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__pwXrc)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: galinaNMiziNqvJx5MUnsplashjpgARAirbMaCfir,
                            fullWidth: 1920,
                            fullHeight: 1278,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$65.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___6P5Xh
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__rcoSo)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__gexzP
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__fBfM)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: igorSonFvPxCqgtwcUnsplashjpgO3KFr3VQ40RKOw,
                            fullWidth: 640,
                            fullHeight: 481,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$80.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__pdhl9
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__v5L40)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___6Q4Yv
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__nm8Nv)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: scottWebbORwRlTgBrPoUnsplashjpgZt1MhIquN0B9Dk,
                            fullWidth: 1920,
                            fullHeight: 1280,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$40.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__c3Exb
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                  <div className={classNames(projectcss.all, sty.column__e8GF)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__vv4JP
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__vUb5N)}
                          displayHeight={"100%"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: freddieMarriageUcfKyTanLuUnsplashjpg69MtM6AxIZnF,
                            fullWidth: 640,
                            fullHeight: 427,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      onSale={true}
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__zeIyq
                          )}
                          numReviews={"(45 Review)"}
                        />
                      }
                      title={"Product"}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <FeatureItem
                  data-plasmic-name={"featureItem"}
                  data-plasmic-override={overrides.featureItem}
                  className={classNames("__wab_instance", sty.featureItem)}
                />
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__mK0Nt)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___6JuW3
                    )}
                  >
                    {"Featured Products"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__moDe2)}
                >
                  <div className={classNames(projectcss.all, sty.column__exxu)}>
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__oZqMv
                      )}
                      price={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aRRhX
                          )}
                        >
                          {"$160.00"}
                        </div>
                      }
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__qa4Gh
                          )}
                          numReviews={"(12 Review)"}
                          stars={"two"}
                        />
                      }
                      title={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__qtXxp
                          )}
                        >
                          {"Designed Sofa"}
                        </div>
                      }
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__rIuwx)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__mSnU5
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___4RkFy)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: f2Ijq0BYlEpgjyWy,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$200.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__o9H76
                          )}
                          stars={"four"}
                        />
                      }
                      title={"Dining Table"}
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__zzrZv)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__v001V
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__yTes)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: f3VGdmatAkcDt6OJ,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$100.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings___5EBhM
                          )}
                          numReviews={"(23 Review)"}
                          stars={"five"}
                        />
                      }
                      title={"Chair and Table"}
                      withReviews={true}
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__fib8L)}
                  >
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__xHzSa
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__v2DeB)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: f4LrXqDp5TuHj5I,
                            fullWidth: 270,
                            fullHeight: 310,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      price={"$299.00"}
                      ratings={
                        <Ratings
                          className={classNames(
                            "__wab_instance",
                            sty.ratings__t3WcA
                          )}
                          numReviews={"(35 Review)"}
                        />
                      }
                      title={"Modern Arm Chair"}
                      withReviews={true}
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <div className={classNames(projectcss.all, sty.freeBox__bKbhx)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2Qu8J
                    )}
                  >
                    {"Latest Blog"}
                  </div>
                </div>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___3Csmk)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column___3Extq)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost___47Tjb
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oq7AX)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: b1Gc8XZuPeE3Xri,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__serKn)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__s39Y7
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__sifkB)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: b2ZsFejOqYuGucyL,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__h6A1A)}
                  >
                    <BlogPost
                      className={classNames(
                        "__wab_instance",
                        sty.blogPost__tgEyl
                      )}
                      image={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__tpqwy)}
                          displayHeight={"auto"}
                          displayMaxHeight={"none"}
                          displayMaxWidth={"none"}
                          displayMinHeight={"0"}
                          displayMinWidth={"0"}
                          displayWidth={"100%"}
                          src={{
                            src: b3ZPeaqAnQLspkp,
                            fullWidth: 370,
                            fullHeight: 250,
                            aspectRatio: undefined
                          }}
                        />
                      }
                    />
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__hV4Fy)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__txcjO)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"90px"}
                    src={{
                      src: adidasZyTCRzQd1XP2U,
                      fullWidth: 90,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__q9OQl)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"91px"}
                    src={{
                      src: hmUs3NPrvBl7Czal,
                      fullWidth: 91,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___12Iux)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"98px"}
                    src={{
                      src: kappa6Knw5HlG0NoZmC,
                      fullWidth: 98,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__koqkE)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"124px"}
                    src={{
                      src: lacosteNuYyWlf4Zl1Cxa,
                      fullWidth: 124,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />

                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__dZ09U)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"125px"}
                    src={{
                      src: levisNqr00Qq1MYrLBa,
                      fullWidth: 125,
                      fullHeight: 60,
                      aspectRatio: undefined
                    }}
                  />
                </p.Stack>
              ) : null}
              {true ? (
                <Footer
                  className={classNames("__wab_instance", sty.footer__du8V4)}
                />
              ) : null}
            </div>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"bigPlants"}
              data-plasmic-override={overrides.bigPlants}
              hasGap={true}
              className={classNames(projectcss.all, sty.bigPlants)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__uRu1E)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2__bck6R
                    )}
                  >
                    {"Big plants"}
                  </h2>
                </p.Stack>
              ) : null}
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___7Oh0W)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__b9FcX)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___64Ufw)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant6JpgC6L1C8MPjCoBpj,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0OCgr
                      )}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__zVM4)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7Vp0O)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ftKnT
                      )}
                    >
                      {"Donec finibus"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___1ExLh
                      )}
                    >
                      {"bigplants"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__p0Y9
                      )}
                    >
                      {"$100.00"}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__t0I2U)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__fhVib)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant1JpgJur1RNKmGbilj,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dc4EI)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__yQhOb)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7Xoqe)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__noawP
                      )}
                    >
                      {"Nulla suscipit"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lrrU
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__jp43C
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__idbHm)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__k4QWj)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant7JpgFY6MVzsllwIo2L,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ag6Ig)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__wluL5)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__l33Xm)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__dMjDu
                      )}
                    >
                      {"Sed consectetur"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__yrLfb
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__nyuil
                      )}
                    >
                      {"$18.40 "}
                    </h5>
                  </div>
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__eqJbt)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant5JpgSC9Dn8R35Vnpr,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__dCzxh)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__nZ8K3)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__rphiB)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__r4D6O
                      )}
                    >
                      {"Vestibulum eget"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__eHyH5
                      )}
                    >
                      {"bigplants "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__hYw
                      )}
                    >
                      {"$220.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <p.Stack
              as={"div"}
              data-plasmic-name={"cactuses"}
              data-plasmic-override={overrides.cactuses}
              hasGap={true}
              className={classNames(projectcss.all, sty.cactuses)}
            >
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rCy5R)}
                >
                  <h2
                    className={classNames(
                      projectcss.all,
                      projectcss.h2,
                      projectcss.__wab_text,
                      sty.h2___3RBrb
                    )}
                  >
                    {"Cactuses"}
                  </h2>
                </p.Stack>
              ) : null}
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__d9MuH)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__qbVTj)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ziYCm)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant41JpgPDx9Qa5KrKmFe,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__mnFl)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__quzE)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__ntfxM)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___2Roas
                      )}
                    >
                      {"Cras molestie"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__tKj66
                      )}
                    >
                      {"cactuses "}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__rnGdE
                      )}
                    >
                      {"$24.99"}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___5WpUl)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__keNgd)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant31JpgVmNfGCgklisJox,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__jne5)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__mtfvR)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__mntH)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___7M8P
                      )}
                    >
                      {"Curabitur eu tempor"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ab2Pw
                      )}
                    >
                      {"Cactuses"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__jkJim
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__pnjMv)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__u9Xoi)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant9WebpKV5HjHwju5Oi,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qu8Y5)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__jvyys)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__x7J5Y)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__sjj0I
                      )}
                    >
                      {"Fusce sagittis"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__luyKq
                      )}
                    >
                      {"Fusce sagittis"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__fEup2
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column__yvJ74)}
                >
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__qs9Fy)}
                    displayHeight={"270px /* plasmic-token: ObHWhBbrFxpNMB */"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: plant2WebpSbSmpYgIseSxK,
                      fullWidth: 400,
                      fullHeight: 400,
                      aspectRatio: undefined
                    }}
                  />

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qAbPj)}
                    >
                      <Icon3Icon
                        className={classNames(projectcss.all, sty.svg__qDyIj)}
                        role={"img"}
                      />
                    </div>
                  ) : null}
                  <div
                    className={classNames(projectcss.all, sty.freeBox___33Is8)}
                  >
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__zE8Rp
                      )}
                    >
                      {"Integer porta"}
                    </a>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vau2R
                      )}
                    >
                      {"Cactuses"}
                    </div>
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__wePIc
                      )}
                    >
                      {"$49.40 "}
                    </h5>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          ) : null}
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__yvOmR)}>
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__oEb2L)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__ckcr5
                    )}
                  >
                    {"How long does shipping take?"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wKySl
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "Now thatâ€™s a frequent one all right, ainâ€™t it? Your answer to this should manage customer expectations. Just like a good checkout flow should. Tell them the truth"}
                  </div>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__jCMa)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__yDmC
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__buzVf
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xHzk7
                            )}
                          >
                            {
                              "US shipping will take between 3 to 5 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__vzUpo
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__nDkCd
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fqfvI
                            )}
                          >
                            {
                              "International shipping will take between 5 and 10 business days."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__k2Y9W
                          )}
                        >
                          <DotSvgrepoCom1SvgIcon
                            className={classNames(
                              projectcss.all,
                              sty.svg__re6Na
                            )}
                            role={"img"}
                          />

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hoek8
                            )}
                          >
                            {
                              "Mars shipping will be automatically redirected to Elon Muskâ€™s Twitter account."
                            }
                          </div>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vDiy)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__sz4Mw
                    )}
                  >
                    {"How do refunds and returns work?"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__npuwl
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "It happens. Even the most beautiful of plants will disappoint someone. Again, tell it like it is:"}
                  </div>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__m6Z7S)}
                    >
                      {true ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__m52D2
                          )}
                        >
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___9EzF
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__sDIvG
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__lvVxe
                                )}
                              >
                                {"All discounted items sales are final."}
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__zqxPo
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__yMGi
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__yxipN
                                )}
                              >
                                {
                                  "If youâ€™d like another version of your item, please use the return label. Instructions are printed on its back."
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                          {true ? (
                            <p.Stack
                              as={"div"}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__tz1Xf
                              )}
                            >
                              <DotSvgrepoCom1SvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___2JAt2
                                )}
                                role={"img"}
                              />

                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ppDu5
                                )}
                              >
                                {
                                  "If your item is damaged or not functioning correctly, email us at info@planty.com, and weâ€™ll refund you + send you a new one ASAP!"
                                }
                              </div>
                            </p.Stack>
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__sdObh)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4__b9KVl
                    )}
                  >
                    {"Rapid-fire questions"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__frqdp
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>
                </p.Stack>
              ) : null}
              {true ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__eRlD9)}
                >
                  <h4
                    className={classNames(
                      projectcss.all,
                      projectcss.h4,
                      projectcss.__wab_text,
                      sty.h4___7FrYd
                    )}
                  >
                    {"How do you handle sensitive customer information?"}
                  </h4>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__b717
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobile")
                      ? "I didn't know the Snipcart guys were into herbs as well! How beautiful is that Planty theme. I'm going to launch a killer JAMstack e-commerce store using this for sure."
                      : "GDPR, am I right? Make sure youâ€™re as transparent as possible with your data handling process. Or, if youâ€™re using Snipcart, just refer to our ToS and DPA"}
                  </div>
                  {true ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0Stw3
                      )}
                    >
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0Jj3G
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___7VQvA
                            )}
                          >
                            {"Q: Why is this Planty theme so beautiful?"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__rEzsS
                            )}
                          >
                            {
                              "A: We hired our first designer a couple of months ago."
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ust8E
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__qzdqd
                            )}
                          >
                            {"Q: Why did you build a theme for Stackbit?"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__s06Lv
                            )}
                          >
                            {
                              "A: We believe in Stackbitâ€™s promise of opening up the JAMstack to more developers. Plus, we trust these folks.\n Read more about Stackbit"
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ozenA
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__efb1G
                            )}
                          >
                            {"Q: How many people work at Snipcart? "}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kUlhf
                            )}
                          >
                            {
                              "A: Not a lot! Weâ€™re a small, bootstrapped team of eight human beings. Michael might be a robot, though. "
                            }
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jqXh6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__eOOr
                            )}
                          >
                            {"Q: Why is Snipcart based in QuÃ©bec City?"}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__crXi
                            )}
                          >
                            {"A: Have you been here? Itâ€™s beaaautiful!"}
                          </div>
                        </div>
                      ) : null}
                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__jRtZ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fUt50
                            )}
                          >
                            {"Q: Whatâ€™s the meaning of life? "}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__mwJyk
                            )}
                          >
                            {
                              "A: Weâ€™re not quite sure. But building useful products with people we love feels meaningful enough."
                            }
                          </div>
                        </div>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              ) : null}
            </div>
          ) : null}
          {true ? (
            <Footer
              className={classNames("__wab_instance", sty.footer___71UgC)}
            />
          ) : null}
          <div className={classNames(projectcss.all, sty.freeBox__qJhM4)}>
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__oeNy2)}>
                <div className={classNames(projectcss.all, sty.columns__mi2Yj)}>
                  <div
                    className={classNames(projectcss.all, sty.column___2TNe)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___0LQmY)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "562px"
                          : "562px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "100%"
                          : "100%"
                      }
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "947px"
                          : "947px"
                      }
                      loading={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? "lazy"
                          : "lazy"
                      }
                      src={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? {
                              src: promowebpZPzX4E2K21DeiP,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                          : {
                              src: promowebpZPzX4E2K21DeiP,
                              fullWidth: 720,
                              fullHeight: 525,
                              aspectRatio: undefined
                            }
                      }
                    />
                  </div>
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__mrwWp)}
                  >
                    <h1
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1__tYLor
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobile")
                        ? "Behold our FAQ"
                        : "Still have questions?\nContact us. "}
                    </h1>
                    <div
                      className={classNames(projectcss.all, sty.columns__wI0Xv)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__lZPtU
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vtp0G
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "226 rue St-Joseph E, \nQuÃ©bec, QC, Canada, \nG1K 3A9"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__tKp9E
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "+1-202-555-0112"}
                        </div>
                      </p.Stack>
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.column__y33HM
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__urwWs
                          )}
                        >
                          {hasVariant(globalVariants, "screen", "mobile")
                            ? "Behold our FAQ"
                            : "geeks@snipcart.com"}
                        </div>
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__oPzT
                            )}
                          >
                            {(
                              hasVariant(globalVariants, "screen", "mobile")
                                ? true
                                : true
                            ) ? (
                              <p.Stack
                                as={"a"}
                                hasGap={true}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.a,
                                  sty.link__rvVNp
                                )}
                              >
                                <LocationSvgrepoCom1SvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ghvbx
                                  )}
                                  role={"img"}
                                />

                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__xeXqx
                                  )}
                                >
                                  {hasVariant(
                                    globalVariants,
                                    "screen",
                                    "mobile"
                                  )
                                    ? "Discover"
                                    : "On the map"}
                                </div>
                              </p.Stack>
                            ) : null}
                          </div>
                        ) : null}
                      </p.Stack>
                    </div>
                  </p.Stack>
                </div>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__araBl)}>
                {true ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___7YdSl)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___0IvNo
                      )}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pHgx1
                        )}
                      >
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <MenuButton
                            data-plasmic-name={"menuButton"}
                            data-plasmic-override={overrides.menuButton}
                            className={classNames(
                              "__wab_instance",
                              sty.menuButton
                            )}
                          />
                        ) : null}
                        {(
                          hasVariant(globalVariants, "screen", "mobile")
                            ? true
                            : true
                        ) ? (
                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___4DWz
                            )}
                          >
                            <p.PlasmicIcon
                              PlasmicIconType={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? LogoWhitesvgIcon
                                  : LogoWhitesvgIcon
                              }
                              className={classNames(
                                projectcss.all,
                                sty.svg__xugZe
                              )}
                              role={"img"}
                            />

                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__nkqez
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : `/store`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Store"
                                : "Store"}
                            </a>
                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link__hph9V
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : `/about`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "About"
                                : "About"}
                            </a>
                            <a
                              className={classNames(
                                projectcss.all,
                                projectcss.a,
                                projectcss.__wab_text,
                                sty.link___7AYfH
                              )}
                              href={
                                hasVariant(globalVariants, "screen", "mobile")
                                  ? "#"
                                  : `/faq`
                              }
                            >
                              {hasVariant(globalVariants, "screen", "mobile")
                                ? "Faq"
                                : "Faq"}
                            </a>
                          </p.Stack>
                        ) : null}
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__axn5D
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__bgjkK
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Â© Company. All rights reserved. This site proudly built with "
                              : "Â© Company. All rights reserved. This site proudly built with "}
                          </div>
                          <a
                            className={classNames(
                              projectcss.all,
                              projectcss.a,
                              projectcss.__wab_text,
                              sty.link__lAXa
                            )}
                            href={
                              hasVariant(globalVariants, "screen", "mobile")
                                ? "https://www.plasmic.app/"
                                : "https://www.plasmic.app/"
                            }
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Plasmic"
                              : "Plasmic"}
                          </a>
                        </div>
                      </p.Stack>
                    </p.Stack>
                  </div>
                ) : null}
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground2",
    "header",
    "featureItem",
    "bigPlants",
    "cactuses",
    "menuButton"
  ],

  foreground2: ["foreground2"],
  header: ["header", "featureItem"],
  featureItem: ["featureItem"],
  bigPlants: ["bigPlants"],
  cactuses: ["cactuses"],
  menuButton: ["menuButton"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicFaq__ArgProps,
          internalVariantPropNames: PlasmicFaq__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicFaq__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFaq";
  } else {
    func.displayName = `PlasmicFaq.${nodeName}`;
  }
  return func;
}

export const PlasmicFaq = Object.assign(
  // Top-level PlasmicFaq renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground2: makeNodeComponent("foreground2"),
    header: makeNodeComponent("header"),
    featureItem: makeNodeComponent("featureItem"),
    bigPlants: makeNodeComponent("bigPlants"),
    cactuses: makeNodeComponent("cactuses"),
    menuButton: makeNodeComponent("menuButton"),
    // Metadata about props expected for PlasmicFaq
    internalVariantProps: PlasmicFaq__VariantProps,
    internalArgProps: PlasmicFaq__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicFaq;
/* prettier-ignore-end */
